postgres.url = jdbc:postgresql://localhost:5432/cinemamanagementdb
postgres.username = postgres
postgres.password = postgres
postgres.driver = org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

angular.client=http://localhost:4200

s3.host=http://localhost
s3.port=9000
s3.bucket=cinema

s3.access_key=minioadmin
s3.secret_key=minioadmin

s3.presigned.expiration = 12000000

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Security

keycloak.realm=cinema-management
keycloak.auth-server-url=http://localhost:8081/auth
keycloak.ssl-required = external
keycloak.resource=cinema-management-backend
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true

admin.role=admin
user.role=user


#workaround for springfox to work with spring boot >2.6.0
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

client.host=http://localhost
client.port=4200


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

kafka.notification.topic = notificationTopic
